{
	"BotBoilderBasicDialog": {
		"prefix": "bb-simple-dialog",
		"body": [
			"import * as builder from 'botbuilder';",
			"import { injectable, inject } from 'inversify';",
			"",
			"import { serviceBase } from './../../system/services/serviceBase';", 
			"import * as contracts  from '../../system/contract/contracts';",
			"",
			"/**",
			"* A bot dialog", 
			"*/",
			"@injectable()",
			"export default class ${1:newDialog} extends serviceBase implements contracts.IDialog{",
			"    ",
			"    public id:string = '${2:newDialogId}';",
			"    public name:string ='${3:newDialogName}';",
			"    public trigger:RegExp =/^${4:trigger}\\$/i",
			"    public get waterfall(): builder.IDialogWaterfallStep[]{",
			"        return [this.step1, this.step2];",
			"    }",
			"",
			"\t/**",
			"\t* ", 
			"\t*/",
			"\tconstructor() {",
			"\t\tsuper();",				
			"\t}",
			"",
			"\t/**",
			"\t* Step 1",
			"\t* @param  {builder.Session} session",
			"\t* @param  {any} args",
			"\t* @param  {Function} next",
			"\t*/",
			"    private step1(session: builder.Session, args:any, next:Function){",
			"        const botName = 'DemoBot';",
			"        const description = `Demonstrate good composition and injection!`;",
			"",
			"        session.send(`Hi there! I'm \\${botName}`);",
			"        session.send(`In a nutshell, here's what I can do: \\${description}`);",
			"",
			"        builder.Prompts.text(session, `What's your name?`);",
			"    }",
			"",			
			"\t/**",
			"\t* Step 2",
			"\t* @param  {builder.Session} session",
			"\t* @param  {builder.IDialogResult<string>} results",
			"\t* @param  {Function} next",
			"\t*/",
			"    private step2(session: builder.Session, results:builder.IDialogResult<string>, next:Function){",
			"        session.endDialog(`Welcome ending 1, \\${results.response}`);",
			"    }",
			"}",
			"  "
		],
		"description": "A simple dialog that will work with the BotBoiler framework"
	},
	"BotBoilderInject": {
		"prefix": "bb-inject-constructor",
		"body": "@inject(${1:symbol}) ${2:someComponent}",
		"description": "A simple dialog that will work with the BotBoiler framework"
	}
}